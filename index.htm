<!DOCTYPE html>
<html lang="en">
<head>
<title>WASM Test</title>
<script>
async function run() {
  const memory = new WebAssembly.Memory({ initial: 1, maximum: 1 });

  print('Instantiating...');
  const { instance } = await WebAssembly.instantiateStreaming(fetch('main.wasm'), { js: { mem: memory } });

  const usedGivenMemory = instance.exports.memory.buffer === memory.buffer;

  if (usedGivenMemory) {
    print('Same memory buffer used');
  } else {
    print('Different memory buffer');
  }

  printMem('import object memory', memory);
  if (!usedGivenMemory) {
    printMem('instance export memory', instance.exports.memory);
  }

  const v = instance.exports.inc();
  print(`inc: ${v}`);

  printMem('import object memory', memory);
  if (!usedGivenMemory) {
    printMem('instance export memory', instance.exports.memory);
  }
}

function print(msg) { document.body.appendChild(document.createTextNode(msg + '\n\n')); }
function printMem(label, mem) {
  const values = new Uint32Array(mem.buffer);
  let hexRows = [];
  for (let r = 0, i = 0; r < 32; ++r) {
    const row = [];
    for (let c = 0; c < 16; ++c, ++i) {
      row.push(values[i] ? values[i].toString(16).padStart(8, '0') : '--------');
    }
    hexRows.push(row.join(' '));
  }
  print(`${label} (size: ${mem.buffer.byteLength} bytes):\n${hexRows.join('\n')}`);
}
window.addEventListener('DOMContentLoaded', run);
</script>
<style>body { font-family: monospace; white-space: pre; }</style>
</head>
<body></body>
</html>
